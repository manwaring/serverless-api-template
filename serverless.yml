service:
  name: serverless-api-typescript

plugins:
  # - serverless-plugin-iopipe
  - serverless-webpack
  - serverless-cloudformation-resource-counter
  - serverless-plugin-iam-checker
  - serverless-plugin-test-helper
  - serverless-prune-plugin

provider:
  name: aws
  stage: local
  runtime: nodejs10.x
  environment:
    LAMBDA_WRAPPER_LOG: true
    IOPIPE_TOKEN: ${env:IOPIPE_TOKEN}
    HELLO_TABLE: { Ref: HelloTable }
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:PutItem
        - dynamodb:DeleteItem
      Resource: { Fn::GetAtt: [HelloTable, Arn] }

custom:
  prune: # configuration for serverles-prune-plugin
    automatic: true
    number: 3
  warningThreshold: 100 # configuration for serverless-cloudformation-resource-counter

functions:
  get-all-hellos:
    handler: app/hellos/get-all-hellos.handler
    events:
      - http:
          method: get
          path: hellos

  add-hello:
    handler: app/hellos/add-hello.handler
    events:
      - http:
          method: post
          path: hellos

  delete-hello:
    handler: app/hellos/delete-hello.handler
    events:
      - http:
          method: delete
          path: hellos/{id}
          request:
            parameters:
              paths:
                id: true

resources:
  Resources:
    HelloTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    ApiDocumentationBucket:
      Type: AWS::S3::Bucket
      Properties:
        AccessControl: PublicRead
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: index.html

    ApiDocumentationBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref ApiDocumentationBucket
        PolicyDocument:
          Id: APIDocumentationBucketReadPolicy
          Version: '2012-10-17'
          Statement:
            - Sid: PublicReadForGetBucketObjects
              Effect: Allow
              Principal: '*'
              Action: s3:GetObject
              Resource: !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref ApiDocumentationBucket
                  - /*

  Outputs:
    ApiDocumentationBucket:
      Value: !Ref ApiDocumentationBucket
      Description: Bucket for hosting Api documentation

    ApiDocumentationUrl:
      Value: { Fn::GetAtt: [ApiDocumentationBucket, WebsiteURL] }
      Description: URL for Api documentation website
